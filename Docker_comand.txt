# Команды для Docker
1) Запуск контейнера docker с jupiter notebook
    docker run -p 8888:8888 jupyter/scipy-notebook:17aba6048f44

2) Gосмотреть какие контейнеры Docker запущены - docker ps

3) Попасть внутрь контейнера - docker exec -it <mycontainer> bash
    docker exec -it 36be7240b81f bash

        a) Посмотреть текущую папку - pwd
        б) Посмотреть содержимое папаки - ls

4) Скопировать файлы внутрь контейнера - docker cp foo.txt mycontainer:/foo.txt
    docker cp wine.data d4c1d8bec0ff:/home/jovyan/wine.data
    docker cp wine.data 6c2956c0a528:/home/jovyan/wine.data

5) Монтирование Volume
    docker run -v /Users/alexeyk500/Desktop/Docker:/home/jovyan -p 8888:8888 jupyter/scipy-notebook:17aba6048f44

6) Импорт библиотек
    a) создать dockerfile
    б) прописать в dockerfile библиотеки котрые нужно импортировать
        FROM jupyter/scipy-notebook:17aba6048f44
            RUN pip install --upgrade pip
            RUN pip install xgboost
    г) смонтировать новый контейнер - выполнить build для контенера - docker build -t my_notebook .
        где my_notebook - имя для контейнера который создаем
    в) запуск смонтированнаого контенера командой 
        docker run -v /Users/alexeyk500/Desktop/Docker:/home/jovyan -p 8888:8888 my_notebook
        где my_notebook - имя созданного контейнера

7) Docker compose - Использование нескольких контейнеров Docker одновременно
    а) Создать файл - docker-compose.yml
    б) Прописать настройки 
        version: '3'
        services:
        jupiter:
            build:
                context: .
                dockerfile: dockerfile
            volumes: 
                - ./:/home/jovyan
            ports: 
                - "8888:8888"
    в) Выполнить команду docker-compose up 

8) Подключение Postgressql
    а) в файл docker-compose.yml в секцию services дописываем
                db:
                image: postgres
                environment:
                    POSTGRES_PASSWORD: example
                ports:
                    - "5432:5432"
                volumes:
                    - pgdata:/var/lib/postgresql/data
        volumes: 
            pgdata:
    б) Пересобрать контейнер - Выполнив команду docker-compose up --build

9) Посмотреть данные сохраненные в Volume - docker volume ls

=======================================================================================

Работа с Git

1) Создать пустой репозиторий в текущей папке - git init
2) Создать файл .gitignore - для файлов котрые не будем сохранять репозитории
3) Все оставшиеся файлы добавить в Git - git add .
4) Закомитить изменения - git commit -m'fineshed course_24_08_21'
5) Создать репозиторий на GitHub
6) Передать данные на GitHub - git push

7) Погасить все контейнеры - docker-compose down
